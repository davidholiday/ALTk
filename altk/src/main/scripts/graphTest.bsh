//File: graphTest.bsh

import org.graphstream.graph.*;
import org.graphstream.graph.implementations.*;
import org.graphstream.ui.swingViewer.View;
import org.graphstream.ui.swingViewer.Viewer;
 
graphTest() {

	// create a graph object
	Graph graph = new SingleGraph("Tutorial 1");

	 
	// add some nodes and edges to the graph
	graph.addNode("A");
	graph.addNode("B");
	graph.addNode("C");
	graph.addNode("D");
	graph.addNode("E");
	graph.addEdge("AB", "A", "B");
	graph.addEdge("AC", "A", "C");
	graph.addEdge("BC", "B", "C");
	graph.addEdge("BD", "B", "D");
	graph.addEdge("BE", "B", "E");
	graph.addEdge("CE", "C", "E");
	graph.addEdge("DC", "D", "C");
	graph.addEdge("DE", "D", "E");
	
	// create a new internal frame to hold the graph
	internalFrameDark graphContainerIFD = new internalFrameDark();

	// create a viewer for the graph (might want to figure out
	// what exactly this does)
	Viewer viewer = new Viewer(graph, Viewer.ThreadingModel.GRAPH_IN_ANOTHER_THREAD);
	
	// allows the viewer to lay things out and provide basic mouse support
	viewer.enableAutoLayout();

	// create new view and ensure a JFrame doesn't get spawned
	View view = viewer.addDefaultView(false);   

	// add the 'view' (which is really a JPanel of sorts) to the internal frame
	graphContainerIFD.add(view);

	// give the internal frame a title
	graphContainerIFD.setTitle("graphTest");

	// add graph variable to the interpreter shared hash table
	bsh.shared.varHT.put("graphTest", graph);

	// set background color of graph to something other than white	
	//String bkgColorAttribS = "graph { fill-color:" + GUI.charcoalHS + "; }";
	//bsGraphAttribHelper.addAttrib(graph, "ui.stylesheet", bkgColorAttribS);

	// set node and edge color
	//String nodeColorAttribS = "node { fill-color:" + GUI.mustardHS + "; }";
	//String edgeColorAttribS = "edge { fill-color:" + GUI.purpleHS + "; }";
	//bsGraphAttribHelper.addAttrib(graph, "ui.stylesheet", nodeColorAttribS);
	//bsGraphAttribHelper.addAttrib(graph, "ui.stylesheet", edgeColorAttribS);

	// show node labels
	//bsGraphAttribHelper.setGlobalNodeAttrib(graph, "ui.label", "LABEL");
	//bsGraphAttribHelper.setGlobalNodeAttrib(graph, "ui.stylesheet", "node { text-color: #ffffff; }");

	// make the graph render nicely
	bsGraphAttribHelper.addAttrib(graph, "ui.quality", "");
	bsGraphAttribHelper.addAttrib(graph, "ui.antialias", "");

	// attach stylesheet to graph
	fileURL = bsGraphAttribHelper.fileName2URL("graphTest.css");
	print("loading stylesheet from: " + fileURL);
	bsGraphAttribHelper.addAttrib(graph, "ui.stylesheet", "url('" + fileURL + "')" );

	// attach the frame to the desktop pane and give it focus
	graphContainerIFD.attach();	


}

