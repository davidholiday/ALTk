//File: graphTest.bsh

import org.graphstream.graph.*;
import org.graphstream.graph.implementations.*;
import org.graphstream.ui.swingViewer.View;
import org.graphstream.ui.swingViewer.Viewer;
 
graphTest() {

	// create a graph object
	Graph graph = new SingleGraph("Tutorial 1");
	 
	// add some nodes and edges to the graph
	graph.addNode("A");
	graph.addNode("B");
	graph.addNode("C");
	graph.addEdge("AB", "A", "B");
	graph.addEdge("BC", "B", "C");
	graph.addEdge("CA", "C", "A");
	
	// create a new internal frame to hold the graph
	internalFrameDark graphContainerIFD = new internalFrameDark();

	// create a viewer for the graph (might want to figure out
	// what exactly this does)
	Viewer viewer = new Viewer(graph, Viewer.ThreadingModel.GRAPH_IN_ANOTHER_THREAD);
	
	// allows the viewer to lay things out and provide basic mouse support
	viewer.enableAutoLayout();

	// create new view and ensure a JFrame doesn't get spawned
	View view = viewer.addDefaultView(false);   

	// add the 'view' (which is really a JPanel of sorts) to the internal frame
	graphContainerIFD.add(view);

	// give the internal frame a title
	graphContainerIFD.setTitle("graphTest");

	// add graph variable to the interpreter shared hash table
	bsh.shared.varHT.put("graphTest", graph);

	// set background color of graph to something other than bright 
	// fucking white	
	String bkgColorAttribS = "graph { fill-color:" + GUI.charcoalHS + "; }";
	bsGraphAttribHelper.addAttrib(graph,"ui.stylesheet", bkgColorAttribS);

	// attach the frame to the desktop pane and give it focus
	graphContainerIFD.attach();	


}

